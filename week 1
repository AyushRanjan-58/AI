import random

def print_board(board):
    print("\n")
    for row in board:
        print(" | ".join(row))
        print("-" * 5)
    print("\n")

def check_winner(board, player):
    # Check rows
    for row in board:
        if all(s == player for s in row):
            return True
    # Check columns
    for col in range(3):
        if all(board[row][col] == player for row in range(3)):
            return True
    # Check diagonals
    if all(board[i][i] == player for i in range(3)) or \
       all(board[i][2 - i] == player for i in range(3)):
        return True
    return False

def is_full(board):
    return all(cell != " " for row in board for cell in row)

def player_move(board, player):
    while True:
        try:
            row = int(input(f"{player}, enter row (0-2): "))
            col = int(input(f"{player}, enter col (0-2): "))
            if row in [0,1,2] and col in [0,1,2] and board[row][col] == " ":
                board[row][col] = "X" if player == "Player 1" else "O"
                break
            else:
                print("Invalid move. Try again.")
        except ValueError:
            print("Enter valid numbers (0-2).")

def system_move(board):
    print("System is making a move...")

    # 1. Try to win
    for r in range(3):
        for c in range(3):
            if board[r][c] == " ":
                board[r][c] = "O"
                if check_winner(board, "O"):
                    return
                board[r][c] = " "

    # 2. Block player win
    for r in range(3):
        for c in range(3):
            if board[r][c] == " ":
                board[r][c] = "X"
                if check_winner(board, "X"):
                    board[r][c] = "O"
                    return
                board[r][c] = " "

    # 3. Take center if available
    if board[1][1] == " ":
        board[1][1] = "O"
        return

    # 4. Take any corner if available
    for r, c in [(0,0), (0,2), (2,0), (2,2)]:
        if board[r][c] == " ":
            board[r][c] = "O"
            return

    # 5. Take any side
    for r, c in [(0,1), (1,0), (1,2), (2,1)]:
        if board[r][c] == " ":
            board[r][c] = "O"
            return

def tic_tac_toe():
    board = [[" " for _ in range(3)] for _ in range(3)]

    print("Choose Game Mode:")
    print("1. Player 1 vs Player 2")
    print("2. Player vs System")
    choice = input("Enter choice (1/2): ")

    if choice == "1":
        players = ["Player 1", "Player 2"]
        symbols = ["X", "O"]
        current = 0
        while True:
            print_board(board)
            player_move(board, players[current])
            if check_winner(board, symbols[current]):
                print_board(board)
                print(f"{players[current]} wins!")
                break
            if is_full(board):
                print_board(board)
                print("It's a draw!")
                break
            current = 1 - current

    elif choice == "2":
        print("You are Player (X). System is O.")
        while True:
            print_board(board)
            player_move(board, "Player 1")
            if check_winner(board, "X"):
                print_board(board)
                print("You win!")
                break
            if is_full(board):
                print_board(board)
                print("It's a draw!")
                break

            system_move(board)
            if check_winner(board, "O"):
                print_board(board)
                print("System wins!")
                break
            if is_full(board):
                print_board(board)
                print("It's a draw!")
                break
    else:
        print("Invalid choice.")

if __name__ == "__main__":
    tic_tac_toe()
